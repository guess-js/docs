{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/react-sidebar/dist/react-sidebar.esm.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["$export","__webpack_require__","P","bind","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","props","_this","call","this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","className","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","a","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","defaultProps","__webpack_exports__","aFunction","isObject","invoke","arraySlice","slice","factories","module","exports","Function","that","fn","partArgs","arguments","bound","args","concat","F","len","i","join","construct","defineProperty","target","source","ownKeys","Object","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key"],"mappings":"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","file":"1-8e8a49fb48c0cffa7323.js","sourcesContent":["// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;"],"sourceRoot":""}