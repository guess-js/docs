{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/react-sidebar/dist/react-sidebar.esm.js","webpack:///./node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["$export","__webpack_require__","P","bind","aFunction","isObject","invoke","arraySlice","slice","factories","module","exports","Function","that","fn","this","partArgs","call","arguments","bound","args","concat","F","len","n","i","join","construct","length","prototype","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","props","_this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_proto","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","className","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","a","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","defaultProps","__webpack_exports__","defineProperty","target","source","ownKeys","Object","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key"],"mappings":"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","file":"7-bf2a23236aa55f67da48.js","sourcesContent":["// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;"],"sourceRoot":""}