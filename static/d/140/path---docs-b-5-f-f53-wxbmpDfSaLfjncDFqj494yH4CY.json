{"data":{"markdownRemark":{"html":"<p>Guess.js provides a collection of libraries for enabling machine-learning driven experience for the Web.</p>\n<p>Currently, the project has two main modules:</p>\n<ul>\n<li>Predictive prefetching for static websites</li>\n<li>Predictive prefetching for JavaScript frameworks</li>\n</ul>\n<p>You can explore how to use both modules of Guess.js in the guides on the left.</p>\n<h3>Predictive Prefetching</h3>\n<p>Guess.js uses a technique called <strong>predictive prefetching</strong>. By consuming data from an analytics source, such as Google Analytics, in order to enable our web applications to prefetch the resources only when they are likely to be needed.</p>\n<p>For example, let us suppose that we have a website with three pages - <em>home</em>, <em>about</em>, and <em>contacts</em>. From Google Analytics we know that there's 95% chance the user to visit the <em>about</em> page from the <em>home</em> page and only 5% chance to go to the <em>contacts</em> page. In this case, if we're loading the assets (for example, JavaScript bundles), for all pages lazily, while the user is in the <em>home</em> page we can download all the resources from the <em>about</em> page so that the user's navigation would be as quick as possible. This technique is know as <strong>prefetching</strong>. When we're performing prefetching based on a prediction for the user's behavior we're applying <strong>predictive prefetching</strong>.</p>\n<p><strong>Guess.js allows us to automate the process of predictive prefetching</strong>.</p>","frontmatter":{"path":"/docs","title":"Documentation"}}},"pageContext":{}}