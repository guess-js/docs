{"data":{"markdownRemark":{"html":"<p><a href=\"https://nextjs.org\">Next.js</a> is a lightweight library for creating web applications. In this guide, we'll show how you can use Guess.js to <strong>predictively prefetch</strong> pages in your Next.js apps.</p>\n<div style=\"background-color: #e7f4ff; border-radius: 5px; padding: 20px; margin-bottom: 20px;\">\nYou can find the source code for the application on <a href=\"https://github.com/mgechev/guess-next\">GitHub</a>.\n</div>\n<h3>Initializing the Application</h3>\n<p>First, create a directory called <code class=\"language-text\">guess-next</code> and a file <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> guess-next <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> guess-next <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> package.json</code></pre></div>\n<p>Inside <code class=\"language-text\">package.json</code> add the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"guess-next\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"export\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &amp;&amp; next export -o guess\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"next\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.1.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^16.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^16.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"guess-webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.1.6\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the snippet above we declare metadata for a new Node.js project called <code class=\"language-text\">guess-next</code> and set its dependencies. We also add two scripts:</p>\n<ul>\n<li><code class=\"language-text\">start</code> - starts a development server with live reloading</li>\n<li><code class=\"language-text\">build</code> - builds our application using <code class=\"language-text\">next</code> from <code class=\"language-text\">node_modules/.bin/next</code></li>\n<li><code class=\"language-text\">export</code> - running <code class=\"language-text\">npm run export</code> will first build our application and after that export its static files to a directory called <code class=\"language-text\">guess</code></li>\n</ul>\n<p>As next step run <code class=\"language-text\">npm i</code> to install the project's dependencies.</p>\n<h3>Application Layout</h3>\n<p>The application layout defines the structure of our application. In our example, we'll create a layout which has a header and an element where we'll render the currently selected page. In the <code class=\"language-text\">guess-next</code> directory, create a folder called <code class=\"language-text\">components</code> and add a file called <code class=\"language-text\">layout.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> components <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> components <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> layout.js</code></pre></div>\n<p>Inside <code class=\"language-text\">layout.js</code> add the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/router'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'next/link'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Head <span class=\"token keyword\">from</span> <span class=\"token string\">'next/head'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> layout <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> router<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">,</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'🔮 Next.js + Guess.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Head<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>meta charSet<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=1.0, width=device-width\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Head<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>header<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/example\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>layout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Inside of the component above, we create the navigation of the application. We create three links: <code class=\"language-text\">/</code>, <code class=\"language-text\">/examples</code>, and <code class=\"language-text\">/about</code>. After that, we add a <code class=\"language-text\">div</code> class name <code class=\"language-text\">content</code>. Inside of this element we render the children elements which are passed to the layout component. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>layout<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> Guess<span class=\"token punctuation\">.</span>js<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>layout<span class=\"token operator\">></span></code></pre></div>\n<p>The snippet above will render the <code class=\"language-text\">span</code> element with content \"Hello, Guess.js!\" inside of the <code class=\"language-text\">.content</code> element of the layout component.</p>\n<h3>Creating Pages</h3>\n<p>Now in <code class=\"language-text\">guess-next</code> create a directory called <code class=\"language-text\">pages</code> and add the following files:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pages/\n├── about.js\n├── example.js\n├── index.js\n└── media.js</code></pre></div>\n<p>As content of all of the files set the following JavaScript:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">PAGE_NAME</span><span class=\"token punctuation\">]</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the snippet above, we import the <code class=\"language-text\">Layout</code> component and as its content we set the string <code class=\"language-text\">[PAGE_NAME]</code>. Remember that this content will be rendered inside of the <code class=\"language-text\">div.content</code> element of the <code class=\"language-text\">Layout</code> component. Replace <code class=\"language-text\">[PAGE_NAME]</code> with the name of the corresponding page. For example, in <code class=\"language-text\">media.js</code> replace <code class=\"language-text\">[PAGE_NAME]</code> with <code class=\"language-text\">Media</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// media.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n    Media\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Inside of <code class=\"language-text\">about.js</code>, also add a <code class=\"language-text\">Link</code> to the <code class=\"language-text\">media</code> page:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'next/link'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n    About\n    <span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    You can find the<span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/media\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>media page here<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>At this stage, when you run <code class=\"language-text\">npm start</code> inside of the <code class=\"language-text\">guess-next</code> directory and you open <a href=\"http://localhost:3000\">http://localhost:3000</a>, your application should look like this:</p>\n<img src=\"/website/images/next.gif\" alt=\"Next.js application\" style=\"display: block; max-width: 450px; margin: auto; margin-bottom: 20px;\">\n<h3>Configuring Next.js</h3>\n<p>Now let us introduce the <code class=\"language-text\">GuessPlugin</code> plugin to the webpack configuration of our Next.js application!</p>\n<p>Create a file called <code class=\"language-text\">next.config.js</code> in <code class=\"language-text\">guess-next</code> with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> GuessPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'guess-webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  webpack<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> isServer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isServer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">GuessPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">reportProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the snippet above, we first import the <code class=\"language-text\">GuessPlugin</code> from <code class=\"language-text\">guess-webpack</code>. After that, we export an object literal with a property <code class=\"language-text\">webpack</code>. This is the hook which lets us alter the webpack configuration of Next.js.</p>\n<p>The function which we set as the value of the <code class=\"language-text\">webpack</code> property accepts two arguments:</p>\n<ul>\n<li><code class=\"language-text\">config</code> - the webpack configuration of our application that we're going to alter</li>\n<li>Object which contains metadata for the current build. Here we can access a flag called <code class=\"language-text\">isServer</code> which indicates if the current webpack invocation is for the build of the server or the client</li>\n</ul>\n<p>Inside of the <code class=\"language-text\">webpack</code> function we check if this build is part of the server-side rendering that Next.js performs. In this case, we just want to return because we don't want Guess.js to perform any prefetching at this phase. Otherwise, we push the <code class=\"language-text\">GuessPlugin</code> in the end of the webpack configuration.</p>\n<p>Notice the argument we pass to the <code class=\"language-text\">GuessPlugin</code> - an object literal with a single property called <code class=\"language-text\">reportProvider</code>. Guess.js accepts a report provider which returns the analytics data for the application. In this case, we provide the report from the disk.</p>\n<p>Create a file called <code class=\"language-text\">routes.json</code>, in the same directory as <code class=\"language-text\">next.config.js</code>, and add the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/example\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/example\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/media\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/media\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/media\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/example\"</span><span class=\"token operator\">:</span> <span class=\"token number\">34</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This file specifies how many times the user has visited given page from another. For example, if we look at the first property of the outer-most object, we can see that from <code class=\"language-text\">/</code>, there were <code class=\"language-text\">80</code> sessions in which users have visited <code class=\"language-text\">/example</code> and <code class=\"language-text\">20</code> sessions in which users have visited <code class=\"language-text\">/about</code>.</p>\n<p><strong>Based on the content of this file, Guess.js is going to build a model for predictive prefetching.</strong></p>\n<div style=\"background-color: #e7f4ff; border-radius: 5px; padding: 20px; margin-bottom: 20px;\">\nAlternatively, if you're using Google Analytics, instead of providing a <code>reportProvider</code>, you can set the <code>GA</code> property with value your Google Analytics View ID. In this case, Guess.js will fetch data from your Google Analytics account and build the report automatically. For the purpose, you'll have to provide a read-only access to your view.\n</div>\n<h3>Predictive Prefetching</h3>\n<p>We're almost at the finish line! 🏁 Now we're going to perform the actual predictive prefetching with the help of the Next.js' router.</p>\n<p>Let's introduce a small snippet of code as part of our component in <code class=\"language-text\">layout.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> guess <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'guess-webpack/api'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'next/link'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Head <span class=\"token keyword\">from</span> <span class=\"token string\">'next/head'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> layout <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> router<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">,</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'🔮 Next.js + Guess.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token function\">guess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> router<span class=\"token punctuation\">.</span><span class=\"token function\">prefetch</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Head<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>meta charSet<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=1.0, width=device-width\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Head<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>header<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/example\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>layout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The two changes we did are:</p>\n<ol>\n<li>We imported <code class=\"language-text\">guess</code> from the module <code class=\"language-text\">guess-webpack/api</code></li>\n<li>We're not performing prefetching based on the predictions of Guess.js</li>\n</ol>\n<p>Let us take a look at the second point because there's a lot going on there. First, we check if the value of <code class=\"language-text\">window</code> is not <code class=\"language-text\">undefined</code>. We do this, to make sure that we're running our application in the browser. We do not want to perform prefetching during server-side rendering. After that, we invoke <code class=\"language-text\">guess()</code>. This invocation will return an object literal of the form:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.7</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The semantics of this object is:</p>\n<ul>\n<li>There's <code class=\"language-text\">0.3</code> probability the user to visit <code class=\"language-text\">/</code> from the current page</li>\n<li>There's <code class=\"language-text\">0.7</code> probability the user to visit <code class=\"language-text\">/about</code> from the current page</li>\n</ul>\n<p>Based on this knowledge, we prefetch the bundles associated with the corresponding pages using <code class=\"language-text\">router.prefetch</code>.</p>\n<p>Keep in mind that this piece of logic will be invoked every time when the user performs a navigation but thanks to <code class=\"language-text\">router.prefetch</code>, we're not going to download the same bundle twice!</p>\n<h3>Conclusion</h3>\n<p>In this guide we saw how we can integrate Guess.js with Next.js.</p>\n<p>First, we developed a simple Next.js application with four pages. After that, we altered the webpack configuration of our application by using <code class=\"language-text\">next.config.js</code> and introduced the <code class=\"language-text\">GuessPlugin</code> as part of the build phase.</p>\n<p>Finally, inside of the layout component, we added a small snippet with the prefetching logic, where we use the <code class=\"language-text\">guess()</code> function from the <code class=\"language-text\">guess-webpack/api</code> package to predict which pages are likely to be visited next from the current page. Using <code class=\"language-text\">router.prefetch</code> we prefetched the bundle corresponding with the predicted pages by Guess.js.</p>","frontmatter":{"path":"/docs/next","title":"Using Guess.js with Next.js"}}},"pageContext":{}}