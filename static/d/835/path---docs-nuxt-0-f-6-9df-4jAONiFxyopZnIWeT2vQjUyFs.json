{"data":{"markdownRemark":{"html":"<p><a href=\"https://github.com/nuxt/nuxt.js\">Nuxt.js</a> is a <a href=\"https://vuejs.org/\">Vue.js</a> Meta Framework to create complex, fast &#x26; universal web applications quickly. In this guide, we'll show how to use Guess.js to <strong>predictively prefetch</strong> pages in your Nuxt.js apps.</p>\n<div style=\"background-color: #e7f4ff; border-radius: 5px; padding: 20px; margin-bottom: 20px;\">\nYou can find the source code for the application on <a href=\"https://github.com/daliborgogic/guess-nuxt\">GitHub</a>.\n</div>\n<h3>Creating a Nuxt.js Application</h3>\n<p>Creating a Nuxt.js application from scratch is really easy, it only needs 1 file and 1 directory. Let's create an empty directory and <code class=\"language-text\">package.json</code> file to start working on the application:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> guess-nuxt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> guess-nuxt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> init -y</code></pre></div>\n<p>Then we need to specify how to start <code class=\"language-text\">nuxt</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"guess-nuxt\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nuxt\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nuxt build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nuxt start\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">dev</code> - will launch Nuxt.js via <code class=\"language-text\">npm run dev</code> at <code class=\"language-text\">http://localhost:3000</code>.</li>\n<li><code class=\"language-text\">build</code> - will build your application with webpack and minify the JS &#x26; CSS (for production).</li>\n<li><code class=\"language-text\">start</code> - will start the server in production mode (after running nuxt build).</li>\n</ul>\n<p>Add <code class=\"language-text\">nuxt</code> to the project's as <code class=\"language-text\">dependencies</code> and <code class=\"language-text\">guess-webpack</code> as <code class=\"language-text\">devDependencies</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i nuxt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> i -D guess-webpack</code></pre></div>\n<h3>Application Layout</h3>\n<p>The application <code class=\"language-text\">layout</code> defines the structure of the application. In our example, we'll create a layout which has a <code class=\"language-text\">nav</code> and an element where we'll render the currently selected page. In the <code class=\"language-text\">guess-nuxt</code> directory, create a folder called <code class=\"language-text\">layouts</code> and add a file called <code class=\"language-text\">default.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> layouts <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> layouts <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> default.vue</code></pre></div>\n<p>Next, let’s update the <code class=\"language-text\">default.vue</code> file as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nuxt-link</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/example<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nuxt-link</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nuxt-link</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>In the <code class=\"language-text\">layout/default.vue</code> above, we create the navigation menu of the application. We create three links: <code class=\"language-text\">/</code>, <code class=\"language-text\">/examples</code>, and <code class=\"language-text\">/about</code>. After that, we add a <code class=\"language-text\">&lt;nuxt/&gt;</code> element. Inside of this element, we render the children elements which are passed to the <code class=\"language-text\">layout</code>.</p>\n<h3>Creating Pages</h3>\n<p>Nuxt.js will transform every <code class=\"language-text\">*.vue</code> file inside the <code class=\"language-text\">pages</code> directory as a route for the application.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pages/\n├── about.vue\n├── example.vue\n├── index.vue\n└── media.vue</code></pre></div>\n<p>Let's create <code class=\"language-text\">pages</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> pages <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> pages <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> about.vue example.vue index.vue media.vue</code></pre></div>\n<p>Inside of <code class=\"language-text\">pages/about.vue</code>, add a link to the <code class=\"language-text\">media</code> page:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>You can find the media page <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/media<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nuxt-link</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>In rest of <code class=\"language-text\">pages/*.vue</code> add some content:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>[REPLACE_WITH_TITLE_PAGE]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>At this stage, when you run <code class=\"language-text\">npm run dev</code> inside of the <code class=\"language-text\">guess-nuxt</code> directory and you open <code class=\"language-text\">http://localhost:3000</code>, your application should look like this:</p>\n<img src=\"/website/images/nuxt.gif\" alt=\"Nuxt.js application\" style=\"display: block; max-width: 450px; margin: auto; margin-bottom: 20px;\">\n<h3>Configuring Nuxt.js</h3>\n<p>Now let us introduce the <code class=\"language-text\">GuessPlugin</code> plugin to the webpack configuration of our Nuxt.js application!</p>\n<p>Create a file called <code class=\"language-text\">nuxt.config.js</code> in <code class=\"language-text\">guess-nuxt</code> with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> readFileSync <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GuessPlugin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'guess-webpack'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  build<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>isClient<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">GuessPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">reportProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now create a file called <code class=\"language-text\">routes.json</code>, in the same directory as <code class=\"language-text\">nuxt.config.js</code>, and add the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/example\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/example\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/media\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/media\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"/media\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"/example\"</span><span class=\"token operator\">:</span> <span class=\"token number\">34</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This file specifies how many times the user has visited a given page from another. For example, if we look at the first property of the outermost object, we can see that from <code class=\"language-text\">/</code>, there were <code class=\"language-text\">80</code> sessions in which users have visited <code class=\"language-text\">/example</code> and <code class=\"language-text\">20</code> sessions in which users have visited <code class=\"language-text\">/about</code>.</p>\n<blockquote>\n<p>Based on the content of this file, Guess.js is going to build a model for predictive prefetching.</p>\n</blockquote>\n<div style=\"background-color: #e7f4ff; border-radius: 5px; padding: 20px; margin-bottom: 20px;\">\nAlternatively, if you're using Google Analytics, instead of providing a <code>reportProvider</code>, you can set the <code>GA</code> property with value your Google Analytics View ID. In this case, Guess.js will fetch data from your Google Analytics account and build the report automatically. For the purpose, you'll have to provide a read-only access to your view.\n</div>\n<p>In this particular case there is slight changes in <code class=\"language-text\">nuxt.config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> readFileSync <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GuessPlugin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'guess-webpack'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">GA</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  build<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">.</span>isClient<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> guessOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">GA</span><span class=\"token punctuation\">)</span> guessOptions<span class=\"token punctuation\">.</span><span class=\"token constant\">GA</span> <span class=\"token operator\">=</span> <span class=\"token constant\">GA</span>\n        <span class=\"token keyword\">else</span> guessOptions<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">reportProvider</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">GuessPlugin</span><span class=\"token punctuation\">(</span>guessOptions<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Alternative for alternatively, a  <a href=\"https://github.com/daliborgogic/guess-module\">@nuxtjs/guess</a> module for Guess.js!</p>\n<h3>Setup</h3>\n<ul>\n<li>Add <code class=\"language-text\">@nuxtjs/guess</code> dependency to your project</li>\n<li>Add <code class=\"language-text\">@nuxtjs/guess</code> to modules section of <code class=\"language-text\">nuxt.config.js</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"modules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span> <span class=\"token string\">\"@nuxtjs/guess\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"GA\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"XXXXXXX\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Options are given directly to <code class=\"language-text\">guess-webpack</code> <a href=\"https://www.npmjs.com/package/guess-webpack#advanced-usage\">options</a>.</p>\n<p>Nothing more to do, <code class=\"language-text\">@nuxtjs/guess</code> will automagically prefetch the routes depending of your Google Analytics stats sunglasses 😎</p>\n<h3>Predictive Prefetching</h3>\n<p>Let's go back one step. We're at the finish line! 🏁 Now we're going to perform the actual predictive prefetching.\nLet's introduce a small snippet of code as part of the Nuxt.js <code class=\"language-text\">plugin/guess.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> guess <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'guess-webpack/api'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> router <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>  <span class=\"token punctuation\">{</span>\n  router<span class=\"token punctuation\">.</span><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span>to <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Wait for page to be displayed</span>\n    Vue<span class=\"token punctuation\">.</span><span class=\"token function\">nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> predictions <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token function\">guess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>probability <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>probability<span class=\"token punctuation\">)</span>\n      predictions<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        router<span class=\"token punctuation\">.</span><span class=\"token function\">getMatchedComponents</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>Component <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Component <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, register <code class=\"language-text\">plugin/guess.js</code> in <code class=\"language-text\">nuxt.config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> src<span class=\"token punctuation\">:</span> <span class=\"token string\">'~/plugins/guess'</span><span class=\"token punctuation\">,</span> ssr<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Conclusion</h3>\n<p>In this guide, we saw how we could integrate Guess.js with Nuxt.js.\nFirst, we developed a simple Nuxt.js application with four pages. After that, we altered the <code class=\"language-text\">webpack</code> configuration of our application by using <code class=\"language-text\">nuxt.config.js</code> and introduced the <code class=\"language-text\">GuessPlugin</code> as part of the build phase.</p>\n<p>Finally, inside <code class=\"language-text\">guess.js</code> plugin, we added a small snippet with the predictions logic, where we use the <code class=\"language-text\">guess()</code> function from the <code class=\"language-text\">guess-webpack/api</code> package to predict which pages are likely to be visited next from the current page. Using <code class=\"language-text\">router</code> we prefetched the bundle corresponding with the predicted pages by <code class=\"language-text\">Guess.js</code>.</p>","frontmatter":{"path":"/docs/nuxt","title":"Using Guess.js with Nuxt.js"}}},"pageContext":{}}